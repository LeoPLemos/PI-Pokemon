{"ast":null,"code":"var _jsxFileName = \"/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/views/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getAllPokemons, resetShowPokemons } from '../../store/actions';\nimport Pokemon from '../elements/Pokemon';\nimport Paged from '../elements/Paged';\nimport NotFound from './NotFound';\nimport Header from './Header';\nimport Loading from './Loading';\nimport './Pokemons.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pokemons() {\n  _s();\n\n  const pokemons = useSelector(state => state.showPokemons);\n  let dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(9);\n  const indexLastPokemon = currentPage * pokemonsPerPage;\n  const indexFirstPokemon = indexLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon);\n\n  const paged = pageNumber => {\n    setCurrentPage(pageNumber);\n  }; //este estado es solo para que vuelva a renderizar cuando cambio el orden\n\n\n  const [order, setOrder] = useState('');\n\n  const handleLoadOnClick = e => {\n    dispatch(resetShowPokemons());\n    dispatch(getAllPokemons());\n  }; // useEffect(() =>{\n  //     dispatch(getAllPokemons())\n  // }, [dispatch]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        setCurrentPage: setCurrentPage,\n        setOrder: setOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_grid\",\n      children: !currentPokemons.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: currentPokemons[0] === 404 ? /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid\",\n            children: currentPokemons.map(p => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Pokemon, {\n                  id: p.id,\n                  dbId: p.dbId,\n                  name: p.name,\n                  image: p.image,\n                  type1: p.types[0],\n                  type2: p.types[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)\n              }, p.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination\",\n            children: /*#__PURE__*/_jsxDEV(Paged, {\n              pokemonsPerPage: pokemonsPerPage,\n              pokemons: pokemons.length,\n              paged: paged\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pokemons, \"juUh0bT9++BifVufFhT5WcX/O2c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/views/Pokemons.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","getAllPokemons","resetShowPokemons","Pokemon","Paged","NotFound","Header","Loading","Pokemons","pokemons","state","showPokemons","dispatch","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexLastPokemon","indexFirstPokemon","currentPokemons","slice","paged","pageNumber","order","setOrder","handleLoadOnClick","e","length","map","p","id","dbId","name","image","types"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getAllPokemons, resetShowPokemons, } from '../../store/actions';\nimport Pokemon from '../elements/Pokemon'\nimport Paged from '../elements/Paged';\nimport NotFound from './NotFound';\nimport Header from './Header';\nimport Loading from './Loading';\nimport './Pokemons.css'\n\n\n\n\nexport default function Pokemons() {\n    const pokemons = useSelector((state)=> state.showPokemons);  \n    let dispatch = useDispatch();\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pokemonsPerPage, setPokemonsPerPage]= useState(9);\n    const indexLastPokemon = currentPage * pokemonsPerPage;\n    const indexFirstPokemon = indexLastPokemon - pokemonsPerPage;\n    const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon);\n    const paged = (pageNumber)=>{\n        setCurrentPage(pageNumber)\n    }\n    //este estado es solo para que vuelva a renderizar cuando cambio el orden\n    const[order, setOrder]= useState('') \n\n    const handleLoadOnClick = (e)=>{\n            dispatch(resetShowPokemons())\n            dispatch(getAllPokemons())    \n    }\n\n    // useEffect(() =>{\n    //     dispatch(getAllPokemons())\n    // }, [dispatch]);\n    \n    return(\n        <div>\n            <div>\n                <Header\n                    setCurrentPage={setCurrentPage}\n                    setOrder={setOrder}\n                />\n            </div>\n\n            <div  className=\"container_grid\">\n                {!currentPokemons.length?\n                    <>\n                    <div>\n                        <Loading />\n                    </div>\n                    </>\n                    :\n                    <>\n                    {currentPokemons[0]=== 404?\n                        <NotFound/>\n                        : \n                        <>    \n                        <div className=\"grid\">    \n                           {currentPokemons.map(p => {\n                            return <div key={p.id}>\n                                    <Pokemon\n                                        id = {p.id}\n                                        dbId = {p.dbId}\n                                        name = {p.name}\n                                        image = {p.image}\n                                        type1 = {p.types[0]}\n                                        type2 = {p.types[1]}\n                                    />\n                                    </div>\n                                })\n                            }\n                        </div> \n                        <div className=\"pagination\">\n                            <Paged\n                                pokemonsPerPage={pokemonsPerPage}\n                                pokemons={pokemons.length}\n                                paged={paged}\n                            />\n                        </div>\n                    </>\n                    }\n                    </>  \n                }\n            </div>    \n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}