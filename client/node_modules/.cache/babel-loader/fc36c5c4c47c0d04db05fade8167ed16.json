{"ast":null,"code":"var _jsxFileName = \"/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/views/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllPokemons, getTypes } from \"../../store/actions\";\nimport './Create.css';\nimport pikachu from \"../../assets/pikachu_create.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const types = useSelector(state => state.types);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(getTypes());\n  }, [dispatch]);\n  const [input, setInput] = useState({\n    name: '',\n    hp: 0,\n    attack: 0,\n    defense: 0,\n    speed: 0,\n    height: 0,\n    weight: 0,\n    image: ''\n  });\n  const [errors, setErrors] = useState({\n    name: 'name is required',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    image: ''\n  });\n  const [typesToAdd, setTypesToAdd] = useState([]);\n  let [typesError, setTypesError] = useState('A Pokemon must have at least one type');\n\n  const handleInputChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate({ ...input,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleTypesChange = e => {\n    const selectedType = types.filter(t => t.name === e.target.value);\n    const typeId = selectedType[0].id;\n\n    if (typesToAdd.length < 2) {\n      setTypesToAdd([...typesToAdd, {\n        id: typeId,\n        name: e.target.value\n      }]);\n      setTypesError('');\n    } else {\n      setTypesError('A Pokemon can have only two types');\n    }\n  };\n\n  const handleClearTypes = e => {\n    e.preventDefault();\n    const arrTypes = typesToAdd.filter(t => t.name !== e.target.value);\n    setTypesToAdd(arrTypes);\n\n    if (arrTypes.length === 1) {\n      setTypesError('');\n    } else {\n      setTypesError('A Pokemon must have at least one type');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const typesIds = typesToAdd.map(t => t.id);\n    const newPokemon = { ...input,\n      types: typesIds\n    };\n    axios.post(\"http://localhost:3001/pokemons\", newPokemon).then(res => {\n      dispatch(getAllPokemons());\n      alert('Pokemon created successfully');\n      setInput({\n        name: '',\n        hp: 0,\n        attack: 0,\n        defense: 0,\n        speed: 0,\n        height: 0,\n        weight: 0,\n        image: ''\n      });\n      setTypesToAdd([]);\n      history.push('/home');\n    }).catch(err => {\n      return alert(`The name ${input.name} already exists.\n                     The pokemon was not created`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button_home\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/home\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create your Pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pikachu_container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pikachu,\n          alt: \"pikachu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div_name\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label_name\",\n              htmlFor: \"name\",\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"create_input_name\",\n              type: \"text\",\n              name: \"name\",\n              value: input.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"danger\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container_url_image\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label_url_image\",\n              htmlFor: \"image\",\n              children: \"url Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input_url_image\",\n              type: \"url\",\n              name: \"image\",\n              value: input.image,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), errors.image && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"danger\",\n              children: errors.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"size_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"height\",\n                className: \"label_size\",\n                children: \"Height:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input_size\",\n                type: \"number\",\n                name: \"height\",\n                value: input.height,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"weight\",\n                className: \"label_size\",\n                children: \"Weight:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input_size\",\n                type: \"number\",\n                name: \"weight\",\n                value: input.weight,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"size_errors\",\n              children: [errors.height && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.height\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 51\n              }, this), errors.weight && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"danger\",\n                children: errors.weight\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 51\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create_stats_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create_stats_title\",\n              children: \"Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create_stats_inputs_container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats_inputs_pair\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create_stats_input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"hp\",\n                    className: \"create_stats_label\",\n                    children: \"Health Points:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"create_input_stats\",\n                    type: \"number\",\n                    name: \"hp\",\n                    value: input.hp,\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create_stats_input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"attack\",\n                    className: \"create_stats_label\",\n                    children: \"Attack:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"create_input_stats\",\n                    type: \"number\",\n                    name: \"attack\",\n                    value: input.attack,\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats_inputs_pair\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create_stats_input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"defense\",\n                    className: \"create_stats_label\",\n                    children: \"Defense:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"create_input_stats\",\n                    type: \"number\",\n                    name: \"defense\",\n                    value: input.defense,\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create_stats_input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"speed\",\n                    className: \"create_stats_label\",\n                    children: \"Speed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"create_input_stats\",\n                    type: \"number\",\n                    name: \"speed\",\n                    value: input.speed,\n                    onChange: handleInputChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Create, \"lSaPQNrD2WbuCtcFNm+BYlk8Jkw=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = Create;\nexport function validate(input) {\n  let errors = {};\n\n  if (!input.name) {\n    errors.name = \"name is required\";\n  }\n\n  if (input.hp < 0) {\n    errors.hp = \"it can't be negative\";\n  }\n\n  if (input.attack < 0) {\n    errors.attack = \"it can't be negative\";\n  }\n\n  if (input.defense < 0) {\n    errors.defense = \"it can't be negative\";\n  }\n\n  if (input.speed < 0) {\n    errors.speed = \"it can't be negative\";\n  }\n\n  if (input.height < 0) {\n    errors.height = \"it can't be negative\";\n  }\n\n  if (input.weight < 0) {\n    errors.weight = \"it can't be negative\";\n  } //modificando\n\n\n  if (input.image) {\n    if (!/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(input.image)) {\n      errors.image = \"the url is invalid\";\n    }\n  }\n\n  return errors;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/views/Create.js"],"names":["React","useEffect","useState","Link","useHistory","axios","useDispatch","useSelector","getAllPokemons","getTypes","Create","types","state","dispatch","history","input","setInput","name","hp","attack","defense","speed","height","weight","image","errors","setErrors","typesToAdd","setTypesToAdd","typesError","setTypesError","handleInputChange","e","target","value","validate","handleTypesChange","selectedType","filter","t","typeId","id","length","handleClearTypes","preventDefault","arrTypes","handleSubmit","typesIds","map","newPokemon","post","then","res","alert","push","catch","err","pikachu","test"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllPokemons, getTypes } from \"../../store/actions\";\nimport './Create.css';\nimport pikachu from '../../assets/pikachu_create.svg';\n\n\n\nexport default function Create(){\n    const types = useSelector((state)=> state.types);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    useEffect(() =>{\n        dispatch(getTypes())\n        \n    }, [dispatch]);\n    \n    const [input, setInput] = useState({\n        name:'',\n        hp:0,\n        attack:0,\n        defense:0,\n        speed:0,\n        height:0,\n        weight:0,\n        image:'',\n    })\n\n    const [errors, setErrors] = useState({\n        name:'name is required',\n        hp:'',\n        attack:'',\n        defense:'',\n        speed:'',\n        height:'',\n        weight:'',\n        image:''\n    });\n\n    const [typesToAdd, setTypesToAdd] = useState([]);\n\n    let [typesError, setTypesError] = useState('A Pokemon must have at least one type');\n    \n    const handleInputChange=(e)=>{\n        setInput({\n            ...input, [e.target.name]:e.target.value\n        })\n        setErrors(\n            validate({\n              ...input,\n              [e.target.name]: e.target.value,\n            })\n        );\n    };\n\n    const handleTypesChange=(e)=>{\n        const selectedType = types.filter(t=> t.name === e.target.value);\n        const typeId = selectedType[0].id;\n        if(typesToAdd.length < 2){\n            setTypesToAdd([...typesToAdd, {id:typeId, name:e.target.value}])\n            setTypesError('')\n        }else{\n            setTypesError('A Pokemon can have only two types');\n        }\n        \n    };\n\n    const handleClearTypes = (e)=>{\n        e.preventDefault();\n        const arrTypes =  typesToAdd.filter(t=> t.name !== e.target.value)\n        setTypesToAdd(arrTypes)\n        if(arrTypes.length === 1){\n            setTypesError('')\n        }else{\n            setTypesError('A Pokemon must have at least one type')\n        }\n    }\n    \n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        const typesIds = typesToAdd.map(t=> t.id)\n        const newPokemon = {...input, types:typesIds}\n        axios.post(\"http://localhost:3001/pokemons\", newPokemon)\n        .then(res =>{\n            dispatch(getAllPokemons())\n            alert('Pokemon created successfully')\n            setInput({\n                name:'',\n                hp:0,\n                attack:0,\n                defense:0,\n                speed:0,\n                height:0,\n                weight:0,\n                image:''\n                })\n            setTypesToAdd([]);\n            history.push('/home')\n        })\n        .catch((err)=> {\n            return alert(`The name ${input.name} already exists.\n                     The pokemon was not created`) \n        })\n    }\n\n        \n    return(\n        <div>\n            <div className = \"button_home\">\n                <Link to ='/home'>\n                    <button>Home</button>\n                </Link>\n            </div>\n            <h3>Create your Pokemon</h3>\n            <div className=\"form_container\">\n                <div className=\"pikachu_container\">\n                    <img src={pikachu} alt=\"pikachu\"></img>\n                </div>\n                <div className=\"form\">\n                    <form>\n                        <div className = \"div_name\">\n                            <label className = \"label_name\" htmlFor='name'>Name:</label>\n                            <input\n                                className=\"create_input_name\"\n                                type='text'\n                                name='name'\n                                value={input.name}\n                                onChange={handleInputChange}\n                            />\n                            {errors.name && <p className=\"danger\">{errors.name}</p>}\n                        </div>\n                        \n                        <div className=\"container_url_image\">\n                            <label className=\"label_url_image\" htmlFor='image'>url Image:</label>\n                            <input\n                                className=\"input_url_image\"\n                                type= 'url'\n                                name='image'\n                                value={input.image}\n                                onChange={handleInputChange}\n                            />\n                            {errors.image && <p className=\"danger\">{errors.image}</p>}\n                        </div>\n                        \n                        <div className=\"size_container\">\n                            <div className=\"size\">\n                                <label htmlFor='height'className=\"label_size\">Height:</label>\n                                <input\n                                    className=\"input_size\"\n                                    type= 'number'\n                                    name='height'\n                                    value={input.height}\n                                    onChange={handleInputChange}\n                                />\n                            </div>\n                            <div className=\"size\">  \n                                <label htmlFor='weight' className=\"label_size\">Weight:</label>\n                                <input\n                                    className=\"input_size\"\n                                    type= 'number'\n                                    name='weight'\n                                    value={input.weight}\n                                    onChange={handleInputChange}\n                                />\n                            </div>\n                            <div className=\"size_errors\">\n                                {errors.height && <p className=\"danger\">{errors.height}</p>}\n                                {errors.weight && <p className=\"danger\">{errors.weight}</p>}\n                            </div>\n                        </div>\n\n                        <div className=\"create_stats_container\">    \n                            <div className = \"create_stats_title\">Stats</div>\n                            <div className=\"create_stats_inputs_container\">\n                                <div className=\"stats_inputs_pair\">\n                                    <div className=\"create_stats_input\">\n                                        <label htmlFor='hp' className=\"create_stats_label\">Health Points:</label>\n                                        <input\n                                            className=\"create_input_stats\"\n                                            type= 'number'\n                                            name='hp'\n                                            value={input.hp}\n                                            onChange={handleInputChange}\n                                        />\n                                    </div>\n                                    <div className=\"create_stats_input\">    \n                                        <label htmlFor='attack' className=\"create_stats_label\">Attack:</label>\n                                        <input\n                                            className=\"create_input_stats\"\n                                            type= 'number'\n                                            name='attack'\n                                            value={input.attack}\n                                            onChange={handleInputChange}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"stats_inputs_pair\">   \n                                    <div className=\"create_stats_input\"> \n                                        <label htmlFor='defense' className=\"create_stats_label\">Defense:</label>\n                                        <input\n                                            className=\"create_input_stats\"\n                                            type= 'number'\n                                            name='defense'\n                                            value={input.defense}\n                                            onChange={handleInputChange}\n                                        />\n                                    </div>\n                                    <div className=\"create_stats_input\">    \n                                        <label htmlFor='speed' className=\"create_stats_label\">Speed</label>\n                                        <input\n                                            className=\"create_input_stats\"\n                                            type= 'number'\n                                            name='speed'\n                                            value={input.speed}\n                                            onChange={handleInputChange}\n                                        />\n                                    </div>\n                                </div>    \n                            </div>\n                        </div>\n                        {/* <div clasName=\"types_container\">   \n                            <h4>Types</h4>\n                            <label htmlFor=\"type1\">Choose a type:  </label>\n                            <select \n                                onChange={handleTypesChange}\n                            >\n                                {types?.map((type)=>(\n                                    <option key={type.id} value={type.name}>{type.name}</option>    \n                                ))}\n                            </select>\n                            <div>\n                                {typesToAdd.map((type, index)=>(\n                                    <div key = {index}>\n                                        <p>{type.name}</p>\n                                        <button \n                                            onClick = {handleClearTypes}\n                                            value={type.name}\n                                        >X</button>\n                                    </div>\n                                    \n                                ))}\n\n                            </div>\n\n                        </div> */}\n                        \n                        {/* <button \n                            type=\"submit\"\n                            onClick = {handleSubmit}\n                        >\n                            Create Pokemon\n                        </button>  */}\n                        \n                    </form>\n\n                </div>\n            </div>\n        </div>\n\n\n\n    )\n\n}\n\nexport function validate(input) {\n    let errors = {};\n    if (!input.name) {\n        errors.name = \"name is required\";\n    \n    }\n  \n    if (input.hp < 0) {\n        errors.hp = \"it can't be negative\";\n        }\n\n    if (input.attack < 0) {\n        errors.attack = \"it can't be negative\";\n    }\n\n    if (input.defense < 0) {\n        errors.defense = \"it can't be negative\";\n    }\n\n    if (input.speed < 0) {\n        errors.speed = \"it can't be negative\";\n    }\n\n    if (input.height < 0) {\n        errors.height = \"it can't be negative\";\n    }\n\n    if (input.weight < 0) {\n        errors.weight = \"it can't be negative\";\n    }\n    //modificando\n    if(input.image){\n        if (!/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(input.image)) {\n            errors.image = \"the url is invalid\"; \n        }\n    }\n        \n    return errors;\n}\n\n\n\n  "]},"metadata":{},"sourceType":"module"}