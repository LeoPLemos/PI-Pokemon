{"ast":null,"code":"var _jsxFileName = \"/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/elements/FilterByType.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterByType, getTypes } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterByType() {\n  _s();\n\n  const types = useSelector(state => state.types);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTypes());\n  }, [dispatch]);\n\n  const handleOnChange = e => {\n    e.preventDefault();\n    dispatch(filterByType(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Filter by Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"type1\",\n      children: \"Type:  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleOnChange,\n      children: types === null || types === void 0 ? void 0 : types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type.name,\n        children: type.name\n      }, type.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FilterByType, \"myJd1FA6WHAekg06EIaRNzdvAu4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FilterByType;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterByType\");","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/elements/FilterByType.js"],"names":["React","useEffect","useSelector","useDispatch","filterByType","getTypes","FilterByType","types","state","dispatch","handleOnChange","e","preventDefault","target","value","map","type","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,qBAAvC;;AAKA,eAAe,SAASC,YAAT,GAAuB;AAAA;;AAClC,QAAMC,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAGA,KAAK,CAACD,KAAf,CAAzB;AACA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AAEH,GAHQ,EAGN,CAACI,QAAD,CAHM,CAAT;;AAKA,QAAMC,cAAc,GAAEC,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACL,YAAY,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEQ;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ;AACI,MAAA,QAAQ,EAAEJ,cADd;AAAA,gBAGKH,KAHL,aAGKA,KAHL,uBAGKA,KAAK,CAAEQ,GAAP,CAAYC,IAAD,iBACR;AAAsB,QAAA,KAAK,EAAEA,IAAI,CAACC,IAAlC;AAAA,kBAAyCD,IAAI,CAACC;AAA9C,SAAaD,IAAI,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AAHL;AAAA;AAAA;AAAA;AAAA,YAHR,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA5BuBZ,Y;UACNJ,W,EACGC,W;;;KAFGG,Y","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterByType, getTypes } from \"../../store/actions\";\n\n\n\n\nexport default function FilterByType(){\n    const types = useSelector(state=> state.types) \n    const dispatch = useDispatch();\n    \n    useEffect(() =>{\n        dispatch(getTypes())\n        \n    }, [dispatch]);\n        \n    const handleOnChange=(e)=>{\n        e.preventDefault();\n        dispatch(filterByType(e.target.value))\n    }\n    \n    return( \n        <div>\n            <h4>Filter by Type</h4>\n                <label htmlFor=\"type1\">Type:  </label>\n                <select \n                    onChange={handleOnChange}\n                >\n                    {types?.map((type)=>(\n                        <option key={type.id} value={type.name}>{type.name}</option>    \n                    ))}\n                </select>\n            <hr/>\n        </div>\n    )        \n}\n\n       "]},"metadata":{},"sourceType":"module"}