{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_BY_ID, GET_POKEMON_BY_NAME, GET_TYPES, FILTER_POKEMONS_BY_TYPE, FILTER_POKEMONS_BY_CREATOR // ORDER_POKEMONS,\n// CREATE_POKEMON,\n// ADD_FAVORITE,\n// REMOVE_FAVORITE, \n} from \"../actions/index\";\nconst initialState = {\n  loadedPokemons: [],\n  showPokemons: [],\n  orderedPokemons: [],\n  // favoritesPokemons: [],\n  types: [],\n  pokemonDetail: {} //esto debería sacarlo de la store?\n\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_POKEMONS:\n      //con esto adecuo el formato del type de los pokes que vienen de la Db\n      const allPokemons = action.payload.map(p => {\n        if (p.dbId) {\n          p.types = p.types.length < 2 ? [p.types[0].name] : [p.types[0].name, p.types[1].name];\n        }\n      });\n      return { ...state,\n        loadedPokemons: action.payload,\n        showPokemons: action.payload\n      };\n\n    case GET_POKEMON_BY_ID:\n      //con esto adecuo el formato del type de los pokes que vienen de la Db\n      if (action.payload.dbId) {\n        action.payload.types = action.payload.types.length < 2 ? [action.payload.types[0].name] : [action.payload.types[0].name, action.payload.types[1].name];\n      }\n\n      return { ...state,\n        pokemonDetail: action.payload\n      };\n\n    case GET_POKEMON_BY_NAME:\n      const foundPokemon = [];\n      foundPokemon.push(action.payload);\n      return { ...state,\n        showPokemons: foundPokemon\n      };\n    ///////////////////////////////////////////\n    // ...state,\n    // pokemonDetail:action.payload\n    ///////////////////////////////////////////\n\n    case GET_TYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case FILTER_POKEMONS_BY_TYPE:\n      const filter = state.loadedPokemons.filter(p => p.types.includes(action.payload));\n      return { ...state,\n        showPokemons: filter\n      };\n\n    case FILTER_POKEMONS_BY_CREATOR:\n      if (action.payload === 'own') {\n        const filter = state.loadedPokemons.filter(p => p.hasOwnProperty('dbId'));\n        return { ...state,\n          showPokemons: filter\n        };\n      }\n\n      if (action.payload === 'api') {\n        const filter = state.loadedPokemons.filter(p => !p.hasOwnProperty('dbId'));\n        return { ...state,\n          showPokemons: filter\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/store/reducer/index.js"],"names":["GET_ALL_POKEMONS","GET_POKEMON_BY_ID","GET_POKEMON_BY_NAME","GET_TYPES","FILTER_POKEMONS_BY_TYPE","FILTER_POKEMONS_BY_CREATOR","initialState","loadedPokemons","showPokemons","orderedPokemons","types","pokemonDetail","reducer","state","action","type","allPokemons","payload","map","p","dbId","length","name","foundPokemon","push","filter","includes","hasOwnProperty"],"mappings":"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","sourcesContent":["import {\n    GET_ALL_POKEMONS,\n    GET_POKEMON_BY_ID,\n    GET_POKEMON_BY_NAME,\n    GET_TYPES,\n    FILTER_POKEMONS_BY_TYPE,\n    FILTER_POKEMONS_BY_CREATOR,\n    // ORDER_POKEMONS,\n    // CREATE_POKEMON,\n    // ADD_FAVORITE,\n    // REMOVE_FAVORITE, \n    } from \"../actions/index\"\n\n\nconst initialState = {\n    loadedPokemons: [],\n    showPokemons: [],\n    orderedPokemons: [],\n    // favoritesPokemons: [],\n    types:[],\n    pokemonDetail:{}        //esto debería sacarlo de la store?\n};\n\nconst reducer = (state= initialState, action)=>{\n    switch(action.type){\n        case GET_ALL_POKEMONS:\n            //con esto adecuo el formato del type de los pokes que vienen de la Db\n            const allPokemons = action.payload.map(p=>{\n                if(p.dbId){                             \n                    p.types = p.types.length<2          \n                    ? [p.types[0].name]\n                    : [p.types[0].name, p.types[1].name]\n                }\n            })\n            return {\n                ...state,\n                loadedPokemons:action.payload,\n                showPokemons:action.payload\n            }\n        case GET_POKEMON_BY_ID:\n            //con esto adecuo el formato del type de los pokes que vienen de la Db\n            if(action.payload.dbId){                             \n                action.payload.types = action.payload.types.length<2          \n                    ? [action.payload.types[0].name]\n                    : [action.payload.types[0].name, action.payload.types[1].name]\n            }\n            return {\n                ...state,\n                pokemonDetail:action.payload\n            }    \n        case GET_POKEMON_BY_NAME:\n            const foundPokemon = [];\n            foundPokemon.push(action.payload)\n            return {\n                ...state,\n                showPokemons:foundPokemon\n            } \n\n///////////////////////////////////////////\n                // ...state,\n                // pokemonDetail:action.payload\n///////////////////////////////////////////\n            \n        case GET_TYPES:\n            return {\n                ...state,\n                types:action.payload\n            }\n        case FILTER_POKEMONS_BY_TYPE:\n            const filter = state.loadedPokemons.filter(p => p.types.includes(action.payload))\n            return {\n                ...state,\n                showPokemons:filter\n            }\n        case FILTER_POKEMONS_BY_CREATOR:\n            if(action.payload === 'own'){\n                const filter = state.loadedPokemons.filter(p=> p.hasOwnProperty('dbId'))\n                return{\n                    ...state,\n                    showPokemons:filter\n                }\n            }\n            if(action.payload === 'api'){\n                const filter = state.loadedPokemons.filter(p=> !p.hasOwnProperty('dbId'))\n                return{\n                    ...state,\n                    showPokemons:filter\n                } \n            }\n        \n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}