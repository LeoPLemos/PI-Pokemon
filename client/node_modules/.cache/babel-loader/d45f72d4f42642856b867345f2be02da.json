{"ast":null,"code":"var _jsxFileName = \"/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getAllPokemons } from '../store/actions';\nimport Search from './elements/Search';\nimport Pokemon from './Pokemon';\nimport Paged from './elements/Paged';\nimport FilterByType from './elements/FilterByType';\nimport FilterByCreator from './elements/FilterByCreator';\nimport Order from './elements/Order';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pokemons() {\n  _s();\n\n  const pokemons = useSelector(state => state.showPokemons);\n  let dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage, setPokemonsPerPage] = useState(9);\n  const indexLastPokemon = currentPage * pokemonsPerPage;\n  const indexFirstPokemon = indexLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon);\n\n  const paged = pageNumber => {\n    setCurrentPage(pageNumber);\n  }; //este estado es solo para que vuelva a renderizar cuando cambio el orden\n\n\n  const [order, setOrder] = useState('');\n\n  const handleLoadOnClick = e => {\n    dispatch(getAllPokemons());\n  }; // useEffect(() =>{\n  //     dispatch(getAllPokemons())\n  // }, [dispatch]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadOnClick,\n        children: \"Load All Pokemons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FilterByType, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FilterByCreator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Order, {\n        setCurrentPage: setCurrentPage,\n        setOrder: setOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Paged, {\n        pokemonsPerPage: pokemonsPerPage,\n        pokemons: pokemons.length,\n        paged: paged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentPokemons === null || currentPokemons === void 0 ? void 0 : currentPokemons.map(p => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Pokemon, {\n            id: p.id,\n            dbId: p.dbId,\n            name: p.name,\n            image: p.image,\n            type1: p.types[0],\n            type2: p.types[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pokemons, \"juUh0bT9++BifVufFhT5WcX/O2c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/Pokemons.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","getAllPokemons","Search","Pokemon","Paged","FilterByType","FilterByCreator","Order","Pokemons","pokemons","state","showPokemons","dispatch","currentPage","setCurrentPage","pokemonsPerPage","setPokemonsPerPage","indexLastPokemon","indexFirstPokemon","currentPokemons","slice","paged","pageNumber","order","setOrder","handleLoadOnClick","e","length","map","p","id","dbId","name","image","types"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getAllPokemons, } from '../store/actions';\nimport Search from './elements/Search'\nimport Pokemon from './Pokemon'\nimport Paged from './elements/Paged';\nimport FilterByType from './elements/FilterByType';\nimport FilterByCreator from './elements/FilterByCreator';\nimport Order from './elements/Order';\n\n\n\nexport default function Pokemons() {\n    const pokemons = useSelector((state)=> state.showPokemons);  \n    let dispatch = useDispatch();\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pokemonsPerPage, setPokemonsPerPage]= useState(9);\n    const indexLastPokemon = currentPage * pokemonsPerPage;\n    const indexFirstPokemon = indexLastPokemon - pokemonsPerPage;\n    const currentPokemons = pokemons.slice(indexFirstPokemon, indexLastPokemon);\n    const paged = (pageNumber)=>{\n        setCurrentPage(pageNumber)\n    }\n    //este estado es solo para que vuelva a renderizar cuando cambio el orden\n    const[order, setOrder]= useState('')        \n\n    const handleLoadOnClick = (e)=>{\n            dispatch(getAllPokemons())    \n    }\n\n    // useEffect(() =>{\n    //     dispatch(getAllPokemons())\n    // }, [dispatch]);\n    \n    return(\n        <div>\n            <div>\n                <button onClick= {handleLoadOnClick}>Load All Pokemons</button>\n            </div>\n            <br/>\n            <div>\n                <Link to ='/create'>\n                    <button >Create Pokemon</button>\n                </Link>   \n            </div>\n            <div>\n                <Search/>\n            </div>\n            <div>\n               <FilterByType/> \n            </div>\n            <div>\n               <FilterByCreator/> \n            </div>\n            <div>\n               <Order\n                    setCurrentPage={setCurrentPage}\n                    setOrder={setOrder}\n               /> \n            </div>\n            <div>\n                <Paged\n                    pokemonsPerPage={pokemonsPerPage}\n                    pokemons={pokemons.length}\n                    paged={paged}\n                />\n            </div>\n            <div>\n                {currentPokemons?.map(p => {\n                    return <div key={p.id}>\n                            <Pokemon\n                                id = {p.id}\n                                dbId = {p.dbId}\n                                name = {p.name}\n                                image = {p.image}\n                                type1 = {p.types[0]}\n                                type2 = {p.types[1]}\n                            />\n                            \n                            </div>\n                })}\n            </div>    \n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}