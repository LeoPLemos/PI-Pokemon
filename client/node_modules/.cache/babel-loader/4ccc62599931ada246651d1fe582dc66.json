{"ast":null,"code":"import axios from \"axios\";\nexport const GET_ALL_POKEMONS = 'GET ALL POKEMONS';\nexport const GET_POKEMON_BY_ID = 'GET POKEMON BY ID';\nexport const GET_POKEMON_BY_NAME = 'GET POKEMON BY NAME';\nexport const FILTER_POKEMONS_BY_TYPE = ' FILTER POKEMONS BY TYPE';\nexport const ORDER_POKEMONS = 'ORDER POKEMONS';\nexport const CREATE_POKEMON = 'CREATE POKEMON';\nexport const GET_TYPES = 'GET TYPES'; // export const ADD_FAVORITE = 'ADD FAVORITE';\n// export const REMOVE_FAVORITE = 'REMOVE FAVORITE';\n\nexport function getAllPokemons() {\n  return function (dispatch) {\n    axios.get(\"http://localhost:3001/pokemons\").then(response => {\n      dispatch({\n        type: GET_ALL_POKEMONS,\n        payload: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n;\nexport function getPokemonById(id) {\n  return function (dispatch) {\n    axios.get(`http://localhost:3001/pokemons/${id}`).then(response => {\n      dispatch({\n        type: GET_POKEMON_BY_ID,\n        payload: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\n;\nexport function getPokemonByName(name) {\n  return function (dispatch) {\n    axios.get(`http://localhost:3001/pokemons?name=${name}`).then(response => {\n      dispatch({\n        type: GET_POKEMON_BY_NAME,\n        payload: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function getTypes() {\n  return function (dispatch) {\n    axios.get(\"http://localhost:3001/types\").then(response => {\n      dispatch({\n        type: GET_TYPES,\n        payload: response.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n}\nexport function filterByType(type) {\n  return {\n    type: FILTER_POKEMONS_BY_TYPE,\n    payload: type\n  };\n}","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/store/actions/index.js"],"names":["axios","GET_ALL_POKEMONS","GET_POKEMON_BY_ID","GET_POKEMON_BY_NAME","FILTER_POKEMONS_BY_TYPE","ORDER_POKEMONS","CREATE_POKEMON","GET_TYPES","getAllPokemons","dispatch","get","then","response","type","payload","data","catch","err","console","log","getPokemonById","id","getPokemonByName","name","getTypes","filterByType"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,uBAAuB,GAAG,0BAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB,C,CACP;AACA;;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAO,UAAUC,QAAV,EAAoB;AACvBT,IAAAA,KAAK,CAACU,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,QAAD,IAAc;AACpBH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEZ,gBAAR;AAA0Ba,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA5C,OAAD,CAAR;AACC,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOH,GARD;AASH;AAAA;AAED,OAAO,SAASG,cAAT,CAAwBC,EAAxB,EAA4B;AAC/B,SAAO,UAAUZ,QAAV,EAAoB;AACvBT,IAAAA,KAAK,CAACU,GAAN,CAAW,kCAAiCW,EAAG,EAA/C,EACCV,IADD,CACOC,QAAD,IAAc;AACpBH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEX,iBAAR;AAA2BY,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA7C,OAAD,CAAR;AACC,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOH,GARD;AASH;AAAA;AAED,OAAO,SAASK,gBAAT,CAA0BC,IAA1B,EAA+B;AAClC,SAAO,UAAUd,QAAV,EAAoB;AACvBT,IAAAA,KAAK,CAACU,GAAN,CAAW,uCAAsCa,IAAK,EAAtD,EACCZ,IADD,CACOC,QAAD,IAAc;AACpBH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEV,mBAAR;AAA6BW,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAA/C,OAAD,CAAR;AACC,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOH,GARD;AASH;AAED,OAAO,SAASO,QAAT,GAAmB;AACtB,SAAO,UAAUf,QAAV,EAAmB;AACtBT,IAAAA,KAAK,CAACU,GAAN,CAAU,6BAAV,EACCC,IADD,CACOC,QAAD,IAAY;AACdH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAACN,SAAN;AAAiBO,QAAAA,OAAO,EAACF,QAAQ,CAACG;AAAlC,OAAD,CAAR;AACH,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAND;AAOH,GARD;AASH;AAED,OAAO,SAASQ,YAAT,CAAsBZ,IAAtB,EAA2B;AAC9B,SAAO;AACHA,IAAAA,IAAI,EAAET,uBADH;AAEHU,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH","sourcesContent":["import axios from \"axios\"\nexport const GET_ALL_POKEMONS = 'GET ALL POKEMONS';\nexport const GET_POKEMON_BY_ID = 'GET POKEMON BY ID';\nexport const GET_POKEMON_BY_NAME = 'GET POKEMON BY NAME';\nexport const FILTER_POKEMONS_BY_TYPE = ' FILTER POKEMONS BY TYPE';\nexport const ORDER_POKEMONS = 'ORDER POKEMONS';\nexport const CREATE_POKEMON = 'CREATE POKEMON';\nexport const GET_TYPES = 'GET TYPES';\n// export const ADD_FAVORITE = 'ADD FAVORITE';\n// export const REMOVE_FAVORITE = 'REMOVE FAVORITE';\n\nexport function getAllPokemons() {\n    return function (dispatch) {\n        axios.get(\"http://localhost:3001/pokemons\")\n        .then((response) => {\n        dispatch({ type: GET_ALL_POKEMONS, payload: response.data });\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    };\n};\n\nexport function getPokemonById(id) {\n    return function (dispatch) {\n        axios.get(`http://localhost:3001/pokemons/${id}`)\n        .then((response) => {\n        dispatch({ type: GET_POKEMON_BY_ID, payload: response.data });\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    };\n};\n\nexport function getPokemonByName(name){\n    return function (dispatch) {\n        axios.get(`http://localhost:3001/pokemons?name=${name}`)\n        .then((response) => {\n        dispatch({ type: GET_POKEMON_BY_NAME, payload: response.data });\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }; \n}\n\nexport function getTypes(){\n    return function (dispatch){\n        axios.get(\"http://localhost:3001/types\")\n        .then((response)=>{\n            dispatch({type:GET_TYPES, payload:response.data})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}\n\nexport function filterByType(type){\n    return {\n        type: FILTER_POKEMONS_BY_TYPE,\n        payload: type\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}