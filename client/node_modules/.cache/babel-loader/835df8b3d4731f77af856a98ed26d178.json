{"ast":null,"code":"var _jsxFileName = \"/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/views/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTypes } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const types = useSelector(state => state.types);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getTypes());\n  }, [dispatch]);\n  const [input, setInput] = useState({\n    name: '',\n    hp: 0,\n    attack: 0,\n    defense: 0,\n    speed: 0,\n    height: 0,\n    weight: 0,\n    image: ''\n  });\n  const [errors, setErrors] = useState({\n    name: 'name is required',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    image: '',\n    types: ''\n  });\n  const [typesToAdd, setTypesToAdd] = useState([]);\n\n  const handleInputChange = e => {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validate({ ...input,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleTypesChange = e => {\n    if (typesToAdd.length < 2) {\n      setTypesToAdd([...typesToAdd, e.target.value]);\n    } // setErrors(\n    //     ...errors,\n    //     errors.types='A Pokemon can have only two types'\n    // );\n\n  };\n\n  const handleClearTypes = e => {\n    e.preventDefault();\n    const arrTypes = typesToAdd.filter(t => t !== e.target.value);\n    setTypesToAdd(arrTypes);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('BOTON CREAR');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: errors.name && \"danger\",\n          type: \"text\",\n          name: \"name\",\n          value: input.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"danger\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Stats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"hp\",\n            children: \"Health Points:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"hp\",\n            value: input.hp,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"attack\",\n            children: \"Attack:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"attack\",\n            value: input.attack,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"defense\",\n            children: \"Defense:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"defense\",\n            value: input.defense,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"speed\",\n            children: \"Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"speed\",\n            value: input.speed,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"height\",\n          children: \"Height:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"height\",\n          value: input.height,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"weight\",\n          children: \"Weight:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"weight\",\n          value: input.weight,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          name: \"image\",\n          value: input.image,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"type1\",\n            children: \"Choose a type:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type1\",\n            value: input.type1,\n            onChange: handleTypesChange,\n            children: types === null || types === void 0 ? void 0 : types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type.name,\n              children: type.name\n            }, type.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: typesToAdd.map((type, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleClearTypes,\n                value: type,\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Create Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Create, \"CuNAUMD/xKbED/uy/s3A0eHCJ1g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Create;\nexport function validate(input) {\n  let errors = {};\n\n  if (!input.name) {\n    errors.name = \"name is required\"; // } else {\n    //     errors.name = \"\";\n  }\n\n  if (!input.hp) {\n    errors.hp = \"set health points\";\n  } else if (input.hp < 1) {\n    errors.hp = \"must be greater than zero\";\n  }\n\n  if (!input.attack) {\n    errors.attack = \"set attack\";\n  } else if (input.attack < 1) {\n    errors.attack = \"must be greater than zero\";\n  }\n\n  if (!input.defense) {\n    errors.defense = \"set defense\";\n  } else if (input.defense < 1) {\n    errors.defense = \"must be greater than zero\";\n  }\n\n  if (!input.speed) {\n    errors.speed = \"set speed\";\n  } else if (input.speed < 1) {\n    errors.speed = \"must be greater than zero\";\n  }\n\n  if (!input.height) {\n    errors.height = \"set height\";\n  } else if (input.height < 1) {\n    errors.height = \"must be greater than zero\";\n  }\n\n  if (!input.weight) {\n    errors.weight = \"set weight\";\n  } else if (input.weight < 1) {\n    errors.weight = \"must be greater than zero\";\n  } //modificando\n\n\n  if (!input.image) {\n    errors.image = \"insert image url\";\n  } else if (!/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(input.image)) {\n    errors.image = \"the url is invalid\";\n  } //control types\n  // if (typesToAdd.length ) {\n  //     errors.type1 = \"must select at least one type\";\n  // }\n  // if (input.type2 && input.type1 === input.type2) {\n  //     errors.type2 = \"type already exists\";\n  // } \n\n\n  return errors;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/views/Create.js"],"names":["React","useEffect","useState","useDispatch","useSelector","getTypes","Create","types","state","dispatch","input","setInput","name","hp","attack","defense","speed","height","weight","image","errors","setErrors","typesToAdd","setTypesToAdd","handleInputChange","e","target","value","validate","handleTypesChange","length","handleClearTypes","preventDefault","arrTypes","filter","t","handleSubmit","console","log","type1","map","type","id","index","test"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAIA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAC5B,QAAMC,KAAK,GAAGH,WAAW,CAAEI,KAAD,IAAUA,KAAK,CAACD,KAAjB,CAAzB;AACA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,QAAQ,CAACJ,QAAQ,EAAT,CAAR;AAEH,GAHQ,EAGN,CAACI,QAAD,CAHM,CAAT;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,IAAI,EAAC,EAD0B;AAE/BC,IAAAA,EAAE,EAAC,CAF4B;AAG/BC,IAAAA,MAAM,EAAC,CAHwB;AAI/BC,IAAAA,OAAO,EAAC,CAJuB;AAK/BC,IAAAA,KAAK,EAAC,CALyB;AAM/BC,IAAAA,MAAM,EAAC,CANwB;AAO/BC,IAAAA,MAAM,EAAC,CAPwB;AAQ/BC,IAAAA,KAAK,EAAC;AARyB,GAAD,CAAlC;AAWA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC;AACjCU,IAAAA,IAAI,EAAC,kBAD4B;AAEjCC,IAAAA,EAAE,EAAC,EAF8B;AAGjCC,IAAAA,MAAM,EAAC,EAH0B;AAIjCC,IAAAA,OAAO,EAAC,EAJyB;AAKjCC,IAAAA,KAAK,EAAC,EAL2B;AAMjCC,IAAAA,MAAM,EAAC,EAN0B;AAOjCC,IAAAA,MAAM,EAAC,EAP0B;AAQjCC,IAAAA,KAAK,EAAC,EAR2B;AASjCZ,IAAAA,KAAK,EAAC;AAT2B,GAAD,CAApC;AAYA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMsB,iBAAiB,GAAEC,CAAD,IAAK;AACzBd,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AACK,OAACe,CAAC,CAACC,MAAF,CAASd,IAAV,GAAgBa,CAAC,CAACC,MAAF,CAASC;AAD9B,KAAD,CAAR;AAGAN,IAAAA,SAAS,CACLO,QAAQ,CAAC,EACP,GAAGlB,KADI;AAEP,OAACe,CAAC,CAACC,MAAF,CAASd,IAAV,GAAiBa,CAAC,CAACC,MAAF,CAASC;AAFnB,KAAD,CADH,CAAT;AAMH,GAVD;;AAYA,QAAME,iBAAiB,GAAEJ,CAAD,IAAK;AACzB,QAAGH,UAAU,CAACQ,MAAX,GAAoB,CAAvB,EAAyB;AACrBP,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBG,CAAC,CAACC,MAAF,CAASC,KAAzB,CAAD,CAAb;AACH,KAHwB,CAKzB;AACA;AACA;AACA;;AACH,GATD;;AAWA,QAAMI,gBAAgB,GAAIN,CAAD,IAAK;AAC1BA,IAAAA,CAAC,CAACO,cAAF;AACA,UAAMC,QAAQ,GAAIX,UAAU,CAACY,MAAX,CAAkBC,CAAC,IAAGA,CAAC,KAAKV,CAAC,CAACC,MAAF,CAASC,KAArC,CAAlB;AACAJ,IAAAA,aAAa,CAACU,QAAD,CAAb;AACH,GAJD;;AAOA,QAAMG,YAAY,GAAEX,CAAD,IAAK;AACpBA,IAAAA,CAAC,CAACO,cAAF;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,GAHD;;AAMA,sBACI;AAAA,2BAEI;AAAA,6BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,SAAS,EAAElB,MAAM,CAACR,IAAP,IAAe,QAD9B;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,KAAK,EAAEF,KAAK,CAACE,IAJjB;AAKI,UAAA,QAAQ,EAAEY;AALd;AAAA;AAAA;AAAA;AAAA,gBAFJ,EASKJ,MAAM,CAACR,IAAP,iBAAe;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA,oBAAuBQ,MAAM,CAACR;AAA9B;AAAA;AAAA;AAAA;AAAA,gBATpB,eAUI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AACI,YAAA,IAAI,EAAE,QADV;AAEI,YAAA,IAAI,EAAC,IAFT;AAGI,YAAA,KAAK,EAAEF,KAAK,CAACG,EAHjB;AAII,YAAA,QAAQ,EAAEW;AAJd;AAAA;AAAA;AAAA;AAAA,kBAHJ,eASI;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AACI,YAAA,IAAI,EAAE,QADV;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,KAAK,EAAEd,KAAK,CAACI,MAHjB;AAII,YAAA,QAAQ,EAAEU;AAJd;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAgBI;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAiBI;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAkBI;AACI,YAAA,IAAI,EAAE,QADV;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,KAAK,EAAEd,KAAK,CAACK,OAHjB;AAII,YAAA,QAAQ,EAAES;AAJd;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAwBI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBJ,eAyBI;AACI,YAAA,IAAI,EAAE,QADV;AAEI,YAAA,IAAI,EAAC,OAFT;AAGI,YAAA,KAAK,EAAEd,KAAK,CAACM,KAHjB;AAII,YAAA,QAAQ,EAAEQ;AAJd;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eA0CI;AAAA;AAAA;AAAA;AAAA,gBA1CJ,eA2CI;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3CJ,eA4CI;AACI,UAAA,IAAI,EAAE,QADV;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,KAAK,EAAEd,KAAK,CAACO,MAHjB;AAII,UAAA,QAAQ,EAAEO;AAJd;AAAA;AAAA;AAAA;AAAA,gBA5CJ,eAkDI;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDJ,eAmDI;AACI,UAAA,IAAI,EAAE,QADV;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,KAAK,EAAEd,KAAK,CAACQ,MAHjB;AAII,UAAA,QAAQ,EAAEM;AAJd;AAAA;AAAA;AAAA;AAAA,gBAnDJ,eAyDI;AAAA;AAAA;AAAA;AAAA,gBAzDJ,eA0DI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1DJ,eA2DI;AACI,UAAA,IAAI,EAAE,KADV;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,KAAK,EAAEd,KAAK,CAACS,KAHjB;AAII,UAAA,QAAQ,EAAEK;AAJd;AAAA;AAAA;AAAA;AAAA,gBA3DJ,eAiEI;AAAA;AAAA;AAAA;AAAA,gBAjEJ,eAkEI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AACI,YAAA,IAAI,EAAC,OADT;AAEI,YAAA,KAAK,EAAEd,KAAK,CAAC6B,KAFjB;AAGI,YAAA,QAAQ,EAAEV,iBAHd;AAAA,sBAKKtB,KALL,aAKKA,KALL,uBAKKA,KAAK,CAAEiC,GAAP,CAAYC,IAAD,iBACR;AAAsB,cAAA,KAAK,EAAEA,IAAI,CAAC7B,IAAlC;AAAA,wBAAyC6B,IAAI,CAAC7B;AAA9C,eAAa6B,IAAI,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,oBADH;AALL;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAYI;AAAA,sBACKpB,UAAU,CAACkB,GAAX,CAAe,CAACC,IAAD,EAAOE,KAAP,kBACZ;AAAA,sCACI;AAAA,0BAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AACI,gBAAA,OAAO,EAAIV,gBADf;AAEI,gBAAA,KAAK,EAAEU,IAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAAYE,KAAZ;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEJ,eA6FI;AAAA;AAAA;AAAA;AAAA,gBA7FJ,eAgGI;AAAA;AAAA;AAAA;AAAA,gBAhGJ,eAiGI;AAAA;AAAA;AAAA;AAAA,gBAjGJ,eAkGI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAIP,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuHH;;GA5LuB9B,M;UACNF,W,EACGD,W;;;KAFGG,M;AA8LxB,OAAO,SAASsB,QAAT,CAAkBlB,KAAlB,EAAyB;AAC5B,MAAIU,MAAM,GAAG,EAAb;;AACA,MAAI,CAACV,KAAK,CAACE,IAAX,EAAiB;AACbQ,IAAAA,MAAM,CAACR,IAAP,GAAc,kBAAd,CADa,CAEjB;AACA;AACC;;AAED,MAAI,CAACF,KAAK,CAACG,EAAX,EAAe;AACXO,IAAAA,MAAM,CAACP,EAAP,GAAY,mBAAZ;AACH,GAFD,MAEO,IAAIH,KAAK,CAACG,EAAN,GAAW,CAAf,EAAkB;AACrBO,IAAAA,MAAM,CAACP,EAAP,GAAY,2BAAZ;AACH;;AAED,MAAI,CAACH,KAAK,CAACI,MAAX,EAAmB;AACfM,IAAAA,MAAM,CAACN,MAAP,GAAgB,YAAhB;AACH,GAFD,MAEO,IAAIJ,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACzBM,IAAAA,MAAM,CAACN,MAAP,GAAgB,2BAAhB;AACH;;AAED,MAAI,CAACJ,KAAK,CAACK,OAAX,EAAoB;AAChBK,IAAAA,MAAM,CAACL,OAAP,GAAiB,aAAjB;AACH,GAFD,MAEO,IAAIL,KAAK,CAACK,OAAN,GAAgB,CAApB,EAAuB;AAC1BK,IAAAA,MAAM,CAACL,OAAP,GAAiB,2BAAjB;AACH;;AAED,MAAI,CAACL,KAAK,CAACM,KAAX,EAAkB;AACdI,IAAAA,MAAM,CAACJ,KAAP,GAAe,WAAf;AACH,GAFD,MAEO,IAAIN,KAAK,CAACM,KAAN,GAAc,CAAlB,EAAqB;AACxBI,IAAAA,MAAM,CAACJ,KAAP,GAAe,2BAAf;AACH;;AAED,MAAI,CAACN,KAAK,CAACO,MAAX,EAAmB;AACfG,IAAAA,MAAM,CAACH,MAAP,GAAgB,YAAhB;AACH,GAFD,MAEO,IAAIP,KAAK,CAACO,MAAN,GAAe,CAAnB,EAAsB;AACzBG,IAAAA,MAAM,CAACH,MAAP,GAAgB,2BAAhB;AACH;;AAED,MAAI,CAACP,KAAK,CAACQ,MAAX,EAAmB;AACfE,IAAAA,MAAM,CAACF,MAAP,GAAgB,YAAhB;AACH,GAFD,MAEO,IAAIR,KAAK,CAACQ,MAAN,GAAe,CAAnB,EAAsB;AACzBE,IAAAA,MAAM,CAACF,MAAP,GAAgB,2BAAhB;AACH,GA1C2B,CA2C5B;;;AACA,MAAI,CAACR,KAAK,CAACS,KAAX,EAAkB;AACdC,IAAAA,MAAM,CAACD,KAAP,GAAe,kBAAf;AACC,GAFL,MAEW,IAAI,CAAC,0EAA0EyB,IAA1E,CAA+ElC,KAAK,CAACS,KAArF,CAAL,EAAkG;AACrGC,IAAAA,MAAM,CAACD,KAAP,GAAe,oBAAf;AACH,GAhDuB,CAiD5B;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,SAAOC,MAAP;AACH","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTypes } from \"../../store/actions\";\n\n\n\nexport default function Create(){\n    const types = useSelector((state)=> state.types);\n    const dispatch = useDispatch()\n    useEffect(() =>{\n        dispatch(getTypes())\n        \n    }, [dispatch]);\n    \n    const [input, setInput] = useState({\n        name:'',\n        hp:0,\n        attack:0,\n        defense:0,\n        speed:0,\n        height:0,\n        weight:0,\n        image:'',\n    })\n\n    const [errors, setErrors] = useState({\n        name:'name is required',\n        hp:'',\n        attack:'',\n        defense:'',\n        speed:'',\n        height:'',\n        weight:'',\n        image:'',\n        types:''\n    });\n\n    const [typesToAdd, setTypesToAdd] = useState([]);\n    \n    const handleInputChange=(e)=>{\n        setInput({\n            ...input, [e.target.name]:e.target.value\n        })\n        setErrors(\n            validate({\n              ...input,\n              [e.target.name]: e.target.value,\n            })\n        );\n    };\n\n    const handleTypesChange=(e)=>{\n        if(typesToAdd.length < 2){\n            setTypesToAdd([...typesToAdd, e.target.value])\n        }\n\n        // setErrors(\n        //     ...errors,\n        //     errors.types='A Pokemon can have only two types'\n        // );\n    };\n\n    const handleClearTypes = (e)=>{\n        e.preventDefault();\n        const arrTypes =  typesToAdd.filter(t=> t !== e.target.value)\n        setTypesToAdd(arrTypes)\n    }\n    \n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        console.log('BOTON CREAR')\n    }\n        \n\n    return(\n        <div>\n            \n            <div>\n                <form>\n                    <label htmlFor='name'>Name:</label>\n                    <input\n                        className={errors.name && \"danger\"}\n                        type='text'\n                        name='name'\n                        value={input.name}\n                        onChange={handleInputChange}\n                    />\n                    {errors.name && <p className=\"danger\">{errors.name}</p>}\n                    <div>\n                        <h4>Stats</h4>\n                        <label htmlFor='hp'>Health Points:</label>\n                        <input\n                            type= 'number'\n                            name='hp'\n                            value={input.hp}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor='attack'>Attack:</label>\n                        <input\n                            type= 'number'\n                            name='attack'\n                            value={input.attack}\n                            onChange={handleInputChange}\n                        />\n                        <br/>\n                        <label htmlFor='defense'>Defense:</label>\n                        <input\n                            type= 'number'\n                            name='defense'\n                            value={input.defense}\n                            onChange={handleInputChange}\n                        />\n                        <label htmlFor='speed'>Speed</label>\n                        <input\n                            type= 'number'\n                            name='speed'\n                            value={input.speed}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                    <br/>\n                    <label htmlFor='height'>Height:</label>\n                    <input\n                        type= 'number'\n                        name='height'\n                        value={input.height}\n                        onChange={handleInputChange}\n                    />\n                    <label htmlFor='weight'>Weight:</label>\n                    <input\n                        type= 'number'\n                        name='weight'\n                        value={input.weight}\n                        onChange={handleInputChange}\n                    />\n                    <br/>\n                    <label htmlFor='image'>Image:</label>\n                    <input\n                        type= 'url'\n                        name='image'\n                        value={input.image}\n                        onChange={handleInputChange}\n                    />\n                    <br/>\n                    <div>   \n                        <h4>Types</h4>\n                        <label htmlFor=\"type1\">Choose a type:  </label>\n                        <select \n                            name=\"type1\"\n                            value={input.type1}\n                            onChange={handleTypesChange}\n                        >\n                            {types?.map((type)=>(\n                                <option key={type.id} value={type.name}>{type.name}</option>    \n                            ))}\n                        </select>\n                        <div>\n                            {typesToAdd.map((type, index)=>(\n                                <div key = {index}>\n                                    <p>{type}</p>\n                                    <button \n                                        onClick = {handleClearTypes}\n                                        value={type}\n                                    >X</button>\n                                </div>\n                                \n                            ))}\n\n                        </div>\n\n                    </div>\n                    <br/>\n\n                    \n                    <br/>\n                    <br/>\n                    <button \n                        type=\"submit\"\n                        onClick = {handleSubmit}\n                    >\n                        Create Pokemon\n                    </button> \n                    \n                </form>\n\n            </div>\n\n        </div>\n\n\n\n    )\n\n}\n\nexport function validate(input) {\n    let errors = {};\n    if (!input.name) {\n        errors.name = \"name is required\";\n    // } else {\n    //     errors.name = \"\";\n    }\n  \n    if (!input.hp) {\n        errors.hp = \"set health points\";\n    } else if (input.hp < 1) {\n        errors.hp = \"must be greater than zero\";\n    }\n\n    if (!input.attack) {\n        errors.attack = \"set attack\";\n    } else if (input.attack < 1) {\n        errors.attack = \"must be greater than zero\";\n    }\n\n    if (!input.defense) {\n        errors.defense = \"set defense\";\n    } else if (input.defense < 1) {\n        errors.defense = \"must be greater than zero\";\n    }\n\n    if (!input.speed) {\n        errors.speed = \"set speed\";\n    } else if (input.speed < 1) {\n        errors.speed = \"must be greater than zero\";\n    }\n\n    if (!input.height) {\n        errors.height = \"set height\";\n    } else if (input.height < 1) {\n        errors.height = \"must be greater than zero\";\n    }\n\n    if (!input.weight) {\n        errors.weight = \"set weight\";\n    } else if (input.weight < 1) {\n        errors.weight = \"must be greater than zero\";\n    }\n    //modificando\n    if (!input.image) {\n        errors.image = \"insert image url\";\n        } else if (!/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=.]+$/.test(input.image)) {\n            errors.image = \"the url is invalid\"; \n        }\n    //control types\n    // if (typesToAdd.length ) {\n    //     errors.type1 = \"must select at least one type\";\n    // }\n\n    // if (input.type2 && input.type1 === input.type2) {\n    //     errors.type2 = \"type already exists\";\n    // } \n    \n    return errors;\n}\n\n\n\n  "]},"metadata":{},"sourceType":"module"}