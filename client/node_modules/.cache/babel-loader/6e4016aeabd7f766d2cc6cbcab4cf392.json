{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_BY_ID, GET_POKEMON_BY_NAME, GET_TYPES, FILTER_POKEMONS_BY_TYPE, FILTER_POKEMONS_BY_CREATOR, ORDER_POKEMONS, RESET_SHOWPOKEMONS // CREATE_POKEMON,\n// ADD_FAVORITE,\n// REMOVE_FAVORITE, \n} from \"../actions/index\";\nconst initialState = {\n  loadedPokemons: [],\n  showPokemons: [],\n  types: [],\n  pokemonDetail: null // favoritesPokemons: [],\n\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_POKEMONS:\n      //con esto adecuo el formato del type de los pokes que vienen de la Db\n      action.payload.forEach(p => {\n        if (p.dbId) {\n          p.types = p.types.length < 2 ? [p.types[0].name] : [p.types[0].name, p.types[1].name];\n        }\n      });\n      return { ...state,\n        loadedPokemons: action.payload,\n        showPokemons: action.payload\n      };\n\n    case GET_POKEMON_BY_ID:\n      //con esto adecuo el formato del type de los pokes que vienen de la Db\n      if (action.payload.dbId) {\n        action.payload.types = action.payload.types.length < 2 ? [action.payload.types[0].name] : [action.payload.types[0].name, action.payload.types[1].name];\n      }\n\n      return { ...state,\n        pokemonDetail: action.payload\n      };\n\n    case GET_POKEMON_BY_NAME:\n      if (!action.payload) {\n        return { ...state,\n          showPokemons: [404]\n        };\n      } else {\n        const data = action.payload;\n        const foundPokemon = []; //con esto adecuo el formato del type de los pokes que vienen de la Db\n\n        if (data.dbId) {\n          data.types = data.types.length < 2 ? [data.types[0].name] : [data.types[0].name, data.types[1].name];\n        }\n\n        foundPokemon.push(data);\n        return { ...state,\n          showPokemons: foundPokemon\n        };\n      }\n\n    case GET_TYPES:\n      return { ...state,\n        types: action.payload\n      };\n\n    case FILTER_POKEMONS_BY_TYPE:\n      let filter = state.loadedPokemons.filter(p => p.types.includes(action.payload));\n\n      if (!filter.length) {\n        filter = [404];\n      }\n\n      return { ...state,\n        showPokemons: filter\n      };\n\n    case FILTER_POKEMONS_BY_CREATOR:\n      if (action.payload === 'own') {\n        let filter = state.loadedPokemons.filter(p => p.hasOwnProperty('dbId'));\n\n        if (!filter.length) {\n          filter = [404];\n        }\n\n        return { ...state,\n          showPokemons: filter\n        };\n      }\n\n      if (action.payload === 'api') {\n        const filter = state.loadedPokemons.filter(p => !p.hasOwnProperty('dbId'));\n\n        if (!filter.length) {\n          filter = [404];\n        }\n\n        return { ...state,\n          showPokemons: filter\n        };\n      }\n\n    case ORDER_POKEMONS:\n      const {\n        attribute,\n        way\n      } = action.payload;\n      let orderedPokemons = [];\n\n      if (way === 'asc') {\n        orderedPokemons = state.showPokemons.sort((a, b) => {\n          if (a[attribute] < b[attribute]) return -1;\n          if (a[attribute] > b[attribute]) return 1;\n          return 0;\n        });\n      } else {\n        orderedPokemons = state.showPokemons.sort((a, b) => {\n          if (a[attribute] < b[attribute]) return 1;\n          if (a[attribute] > b[attribute]) return -1;\n          return 0;\n        });\n      }\n\n      return { ...state,\n        showPokemons: orderedPokemons\n      };\n\n    case RESET_SHOWPOKEMONS:\n      return { ...state,\n        showPokemons: []\n      };\n    // case CREATE_POKEMON:\n    //     const postStatus = action.payload.status;\n    //     return{\n    //         ...state,\n    //         statusReponsePost:postStatus\n    //     }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/store/reducer/index.js"],"names":["GET_ALL_POKEMONS","GET_POKEMON_BY_ID","GET_POKEMON_BY_NAME","GET_TYPES","FILTER_POKEMONS_BY_TYPE","FILTER_POKEMONS_BY_CREATOR","ORDER_POKEMONS","RESET_SHOWPOKEMONS","initialState","loadedPokemons","showPokemons","types","pokemonDetail","reducer","state","action","type","payload","forEach","p","dbId","length","name","data","foundPokemon","push","filter","includes","hasOwnProperty","attribute","way","orderedPokemons","sort","a","b"],"mappings":"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","sourcesContent":["import {\n    GET_ALL_POKEMONS,\n    GET_POKEMON_BY_ID,\n    GET_POKEMON_BY_NAME,\n    GET_TYPES,\n    FILTER_POKEMONS_BY_TYPE,\n    FILTER_POKEMONS_BY_CREATOR,\n    ORDER_POKEMONS,\n    RESET_SHOWPOKEMONS\n    // CREATE_POKEMON,\n    // ADD_FAVORITE,\n    // REMOVE_FAVORITE, \n    } from \"../actions/index\"\n\n\nconst initialState = {\n    loadedPokemons: [],\n    showPokemons: [],\n    types:[],\n    pokemonDetail:null,\n    \n    // favoritesPokemons: [],\n};\n\nconst reducer = (state= initialState, action)=>{\n    switch(action.type){\n        case GET_ALL_POKEMONS:\n            //con esto adecuo el formato del type de los pokes que vienen de la Db\n            action.payload.forEach(p=>{\n                if(p.dbId){                             \n                    p.types = p.types.length<2          \n                    ? [p.types[0].name]\n                    : [p.types[0].name, p.types[1].name]\n                }\n            })\n            return {\n                ...state,\n                loadedPokemons:action.payload,\n                showPokemons:action.payload\n            }\n        case GET_POKEMON_BY_ID:\n            //con esto adecuo el formato del type de los pokes que vienen de la Db\n            if(action.payload.dbId){                             \n                action.payload.types = action.payload.types.length<2          \n                    ? [action.payload.types[0].name]\n                    : [action.payload.types[0].name, action.payload.types[1].name]\n            }\n            return {\n                ...state,\n                pokemonDetail:action.payload\n            }    \n        case GET_POKEMON_BY_NAME:\n            if(!action.payload){\n                return {\n                    ...state,\n                    showPokemons:[404]\n                }\n            }else {\n                const data = action.payload;\n                const foundPokemon = [];\n                //con esto adecuo el formato del type de los pokes que vienen de la Db\n                if(data.dbId){                             \n                    data.types = data.types.length<2          \n                        ? [data.types[0].name]\n                        : [data.types[0].name, data.types[1].name]\n                }\n                foundPokemon.push(data)\n                return {\n                    ...state,\n                    showPokemons:foundPokemon\n                }\n            } \n        case GET_TYPES:\n            return {\n                ...state,\n                types:action.payload\n            }\n        case FILTER_POKEMONS_BY_TYPE:\n            let filter = state.loadedPokemons.filter(p => p.types.includes(action.payload))\n            if(!filter.length){\n                filter = [404];\n            }\n            return {\n                ...state,\n                showPokemons:filter\n            }\n        case FILTER_POKEMONS_BY_CREATOR:\n            if(action.payload === 'own'){\n                let filter = state.loadedPokemons.filter(p=> p.hasOwnProperty('dbId'))\n                if(!filter.length){\n                    filter = [404];\n                }\n                return{\n                    ...state,\n                    showPokemons:filter\n                }\n            }\n            if(action.payload === 'api'){\n                const filter = state.loadedPokemons.filter(p=> !p.hasOwnProperty('dbId'))\n                if(!filter.length){\n                    filter = [404];\n                }\n                return{\n                    ...state,\n                    showPokemons:filter\n                } \n            }\n        case ORDER_POKEMONS:\n            const{ attribute, way } = action.payload;\n            let orderedPokemons = [];\n            if(way === 'asc'){\n                orderedPokemons = state.showPokemons.sort((a, b)=>{\n                    if(a[attribute] < b[attribute])return -1;\n                    if(a[attribute] > b[attribute])return 1;\n                    return 0;\n                })\n            }else{\n                orderedPokemons = state.showPokemons.sort((a, b)=>{\n                    if(a[attribute] < b[attribute])return 1;\n                    if(a[attribute] > b[attribute])return -1;\n                    return 0;\n                })\n            }\n            return{\n                ...state,\n                showPokemons: orderedPokemons\n            }\n        case RESET_SHOWPOKEMONS:\n            return{\n                ...state,\n                showPokemons:[]\n            }\n        // case CREATE_POKEMON:\n        //     const postStatus = action.payload.status;\n        //     return{\n        //         ...state,\n        //         statusReponsePost:postStatus\n        //     }\n        \n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}