{"ast":null,"code":"var _jsxFileName = \"/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/Pokemons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPokemons, getDetailPokemon } from '../store/actions';\nimport Pokemon from './Pokemon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Pokemons() {\n  _s();\n\n  const pokemons = useSelector(state => state.loadedPokemons);\n  console.log(pokemons);\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllPokemons());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Soy el component Pokemons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pokemons === null || pokemons === void 0 ? void 0 : pokemons.map(p => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Pokemon, {\n            id: p.id,\n            name: p.name,\n            image: p.image,\n            type1: p.types[0],\n            type2: p.types[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Pokemons, \"iDQpjirNxFBPnmqRETX152+RGIY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Pokemons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemons\");","map":{"version":3,"sources":["/home/leolemos/Escritorio/Henry/PI-Pokemon/client/src/components/Pokemons.js"],"names":["React","useEffect","useDispatch","useSelector","getAllPokemons","getDetailPokemon","Pokemon","Pokemons","pokemons","state","loadedPokemons","console","log","dispatch","map","p","id","name","image","types"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAUA,KAAK,CAACC,cAAjB,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,MAAIK,QAAQ,GAAGX,WAAW,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAK;AACXY,IAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACCI,QADD,aACCA,QADD,uBACCA,QAAQ,CAAEM,GAAV,CAAcC,CAAC,IAAI;AAChB,4BAAO;AAAA,iCACC,QAAC,OAAD;AACI,YAAA,EAAE,EAAIA,CAAC,CAACC,EADZ;AAEI,YAAA,IAAI,EAAID,CAAC,CAACE,IAFd;AAGI,YAAA,KAAK,EAAIF,CAAC,CAACG,KAHf;AAII,YAAA,KAAK,EAAIH,CAAC,CAACI,KAAF,CAAQ,CAAR,CAJb;AAKI,YAAA,KAAK,EAAIJ,CAAC,CAACI,KAAF,CAAQ,CAAR;AALb;AAAA;AAAA;AAAA;AAAA;AADD,WAAUJ,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AASH,OAVA;AADD,qBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA/BuBT,Q;UACHJ,W,EAEFD,W;;;KAHKK,Q","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPokemons, getDetailPokemon } from '../store/actions';\nimport Pokemon from './Pokemon'\n\n\nexport default function Pokemons() {\n    const pokemons = useSelector((state)=> state.loadedPokemons);  \n    console.log(pokemons)   \n    let dispatch = useDispatch();\n    useEffect(() =>{\n        dispatch(getAllPokemons())\n    }, []);\n\n    \n\n    return(\n        <div>\n            <h4>    \n            Soy el component Pokemons\n            </h4>\n            <>\n            {pokemons?.map(p => {\n                return <div key={p.id}>\n                        <Pokemon\n                            id = {p.id}\n                            name = {p.name}\n                            image = {p.image}\n                            type1 = {p.types[0]}\n                            type2 = {p.types[1]}\n                        />\n                    </div>\n            })}    \n            </>  \n            \n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}